[
    {
        "id": "4fd2e6c4.650f68",
        "type": "tab",
        "label": "Sensors",
        "disabled": false,
        "info": ""
    },
    {
        "id": "8bc3036a.fdfb7",
        "type": "tab",
        "label": "UI",
        "disabled": false,
        "info": ""
    },
    {
        "id": "558e4608.692488",
        "type": "tab",
        "label": "Notifications",
        "disabled": false,
        "info": ""
    },
    {
        "id": "617b446b.a0195c",
        "type": "tab",
        "label": "Send notifications",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f25502.d39c1b",
        "type": "tab",
        "label": "Data generator",
        "disabled": false,
        "info": ""
    },
    {
        "id": "94c9239b.5c666",
        "type": "mqtt-broker",
        "name": "",
        "broker": "hairdresser.cloudmqtt.com",
        "port": "25522",
        "tls": "",
        "clientid": "",
        "usetls": true,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "d50d0c9f.31e858",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false
    },
    {
        "id": "4ede8f17.e6b2e",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "Verdana,Verdana,Geneva,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "Verdana,Verdana,Geneva,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "AP-Home",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "none",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 150,
                "sy": 150,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "c65fcf3a.e457e",
        "type": "MySQLdatabase",
        "name": "",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "visualisation_p",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "b405b45b.879578",
        "type": "MySQLdatabase",
        "name": "",
        "host": "130.61.154.45",
        "port": "3306",
        "db": "visualisation_p",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "fbc38b7a.95acf8",
        "type": "telegram bot",
        "botname": "smartcare_sk_bot",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "fd18e2a8.95be5",
        "type": "mqtt in",
        "z": "4fd2e6c4.650f68",
        "name": "",
        "topic": "temperature_exterior",
        "qos": "2",
        "datatype": "auto",
        "broker": "94c9239b.5c666",
        "x": 330,
        "y": 40,
        "wires": [
            [
                "4fecd245.672b4c"
            ]
        ]
    },
    {
        "id": "e7a88837.9461d8",
        "type": "mqtt in",
        "z": "4fd2e6c4.650f68",
        "name": "",
        "topic": "resistance_exterior",
        "qos": "2",
        "datatype": "auto",
        "broker": "94c9239b.5c666",
        "x": 330,
        "y": 100,
        "wires": [
            [
                "4fecd245.672b4c"
            ]
        ]
    },
    {
        "id": "7ec750d6.beb5",
        "type": "mqtt in",
        "z": "4fd2e6c4.650f68",
        "name": "",
        "topic": "humidity_exterior",
        "qos": "2",
        "datatype": "auto",
        "broker": "94c9239b.5c666",
        "x": 320,
        "y": 160,
        "wires": [
            [
                "4fecd245.672b4c"
            ]
        ]
    },
    {
        "id": "8cfad94.4a5ab28",
        "type": "mqtt in",
        "z": "4fd2e6c4.650f68",
        "name": "",
        "topic": "pressure_exterior",
        "qos": "2",
        "datatype": "auto",
        "broker": "94c9239b.5c666",
        "x": 320,
        "y": 220,
        "wires": [
            [
                "4fecd245.672b4c"
            ]
        ]
    },
    {
        "id": "4fecd245.672b4c",
        "type": "join",
        "z": "4fd2e6c4.650f68",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "4",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 550,
        "y": 140,
        "wires": [
            [
                "dc6f6af4.a034f8"
            ]
        ]
    },
    {
        "id": "1123ce96.d734d1",
        "type": "link out",
        "z": "8bc3036a.fdfb7",
        "name": "Data message in",
        "links": [
            "de4a00e.4722b"
        ],
        "x": 1215,
        "y": 360,
        "wires": []
    },
    {
        "id": "de4a00e.4722b",
        "type": "link in",
        "z": "8bc3036a.fdfb7",
        "name": "Data message out",
        "links": [
            "1123ce96.d734d1"
        ],
        "x": 235,
        "y": 360,
        "wires": [
            [
                "4358c50f.f21c1c"
            ]
        ]
    },
    {
        "id": "5e57ad2.2743054",
        "type": "uibuilder",
        "z": "8bc3036a.fdfb7",
        "name": "",
        "topic": "",
        "url": "dashboard",
        "fwdInMessages": false,
        "allowScripts": false,
        "allowStyles": false,
        "copyIndex": true,
        "showfolder": false,
        "useSecurity": true,
        "sessionLength": 432000,
        "tokenAutoExtend": true,
        "x": 1030,
        "y": 320,
        "wires": [
            [],
            [
                "12e32165.61d6ef"
            ]
        ]
    },
    {
        "id": "4ce590be.41206",
        "type": "mqtt in",
        "z": "4fd2e6c4.650f68",
        "name": "",
        "topic": "gasens_id03_temp",
        "qos": "2",
        "datatype": "auto",
        "broker": "94c9239b.5c666",
        "x": 330,
        "y": 320,
        "wires": [
            [
                "d96dc0d2.843eb"
            ]
        ]
    },
    {
        "id": "35fdbba8.e105d4",
        "type": "mqtt in",
        "z": "4fd2e6c4.650f68",
        "name": "",
        "topic": "gasens_id03_hum",
        "qos": "2",
        "datatype": "auto",
        "broker": "94c9239b.5c666",
        "x": 330,
        "y": 440,
        "wires": [
            [
                "d96dc0d2.843eb"
            ]
        ]
    },
    {
        "id": "e4b46ef.9857a9",
        "type": "mqtt in",
        "z": "4fd2e6c4.650f68",
        "name": "",
        "topic": "gasens_id03_pres",
        "qos": "2",
        "datatype": "auto",
        "broker": "94c9239b.5c666",
        "x": 330,
        "y": 500,
        "wires": [
            [
                "d96dc0d2.843eb"
            ]
        ]
    },
    {
        "id": "88e4bf67.1bdb3",
        "type": "mqtt in",
        "z": "4fd2e6c4.650f68",
        "name": "",
        "topic": "gasens_id03_voc",
        "qos": "2",
        "datatype": "auto",
        "broker": "94c9239b.5c666",
        "x": 320,
        "y": 380,
        "wires": [
            [
                "d96dc0d2.843eb"
            ]
        ]
    },
    {
        "id": "d96dc0d2.843eb",
        "type": "join",
        "z": "4fd2e6c4.650f68",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "4",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 550,
        "y": 400,
        "wires": [
            [
                "d01c80fa.7f387"
            ]
        ]
    },
    {
        "id": "83dc4452.4fc608",
        "type": "mysql",
        "z": "4fd2e6c4.650f68",
        "mydb": "c65fcf3a.e457e",
        "name": "INSERT",
        "x": 960,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "d01c80fa.7f387",
        "type": "function",
        "z": "4fd2e6c4.650f68",
        "name": "Prepare SQL",
        "func": "const query = \n`\nINSERT INTO client_data\n(\nclient_id,\ntemperature,\nhumidity,\npressure,\nresistance\n)\nVALUES\n(\n3,\n${msg.payload.gasens_id03_temp},\n${msg.payload.gasens_id03_hum},\n${msg.payload.gasens_id03_pres},\n${msg.payload.gasens_id03_voc}\n);\n`\nmsg.topic = query;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 770,
        "y": 400,
        "wires": [
            [
                "83dc4452.4fc608"
            ]
        ]
    },
    {
        "id": "8196f88f.47e868",
        "type": "mysql",
        "z": "8bc3036a.fdfb7",
        "mydb": "b405b45b.879578",
        "name": "Client",
        "x": 630,
        "y": 160,
        "wires": [
            [
                "7b84f0a0.c8ab4"
            ]
        ]
    },
    {
        "id": "7a34998a.c4be58",
        "type": "change",
        "z": "8bc3036a.fdfb7",
        "name": "Prepare SQL",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 160,
        "wires": [
            [
                "8196f88f.47e868"
            ]
        ]
    },
    {
        "id": "7b84f0a0.c8ab4",
        "type": "function",
        "z": "8bc3036a.fdfb7",
        "name": "Client object",
        "func": "if (msg.payload.length == 0) {\n    return null\n}\n\nlet currentState = msg.payload[0];\n\nlet temperature = [];\nlet humidity = [];\nlet pressure = [];\nlet resistance = [];\nlet bed = [];\n\nmsg.payload.forEach((object) => {\n    \n    //create 4 arrays\n    temperature.push([object.time, object.temperature]);\n    humidity.push([object.time, object.humidity]);\n    pressure.push([object.time, object.pressure]);\n    resistance.push([object.time, object.resistance]);\n    bed.push([object.time, object.bed]);\n    \n});\n\nlet client = \n{\n    id: currentState.id,\n    name: currentState.name,\n    temperature: currentState.temperature,\n    humidity: currentState.humidity,\n    pressure: currentState.pressure,    \n    resistance: currentState.resistance,\n    bed: currentState.bed,\n    temperature_arr: temperature,\n    humidity_arr: humidity,\n    pressure_arr: pressure,    \n    resistance_arr: resistance,\n    bed_arr: bed,\n    alerts: []\n};\n\nmsg.payload = client;\n\nmsg.topic = \"client object\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 810,
        "y": 160,
        "wires": [
            [
                "5e57ad2.2743054"
            ]
        ]
    },
    {
        "id": "4358c50f.f21c1c",
        "type": "switch",
        "z": "8bc3036a.fdfb7",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "load client",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "client info",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "all clients",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "selected clients",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "markers",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "notifications",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "notification settings",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "update client info",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "update user email",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "add client",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "remove client",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "remove notification",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "remove telegram",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "authorised",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 14,
        "x": 270,
        "y": 240,
        "wires": [
            [
                "7a34998a.c4be58"
            ],
            [
                "48a312d6.37c8fc"
            ],
            [
                "48a312d6.37c8fc"
            ],
            [
                "48a312d6.37c8fc"
            ],
            [
                "48a312d6.37c8fc"
            ],
            [
                "48a312d6.37c8fc"
            ],
            [
                "48a312d6.37c8fc"
            ],
            [
                "4a77fa1a.b597a4"
            ],
            [
                "4a77fa1a.b597a4"
            ],
            [
                "4a77fa1a.b597a4"
            ],
            [
                "4a77fa1a.b597a4"
            ],
            [
                "4a77fa1a.b597a4"
            ],
            [
                "4a77fa1a.b597a4"
            ],
            [
                "5e57ad2.2743054"
            ]
        ]
    },
    {
        "id": "4a77fa1a.b597a4",
        "type": "change",
        "z": "8bc3036a.fdfb7",
        "name": "Prepare SQL",
        "rules": [
            {
                "t": "set",
                "p": "temp",
                "pt": "msg",
                "to": "topic",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 280,
        "wires": [
            [
                "42b5975a.313ff8"
            ]
        ]
    },
    {
        "id": "42b5975a.313ff8",
        "type": "mysql",
        "z": "8bc3036a.fdfb7",
        "mydb": "b405b45b.879578",
        "name": "No return",
        "x": 640,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "48a312d6.37c8fc",
        "type": "change",
        "z": "8bc3036a.fdfb7",
        "name": "Prepare SQL",
        "rules": [
            {
                "t": "set",
                "p": "temp",
                "pt": "msg",
                "to": "topic",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 220,
        "wires": [
            [
                "76e5ee2c.419f2"
            ]
        ]
    },
    {
        "id": "76e5ee2c.419f2",
        "type": "mysql",
        "z": "8bc3036a.fdfb7",
        "mydb": "b405b45b.879578",
        "name": "Returns",
        "x": 640,
        "y": 220,
        "wires": [
            [
                "d9573d89.18c76"
            ]
        ]
    },
    {
        "id": "d9573d89.18c76",
        "type": "change",
        "z": "8bc3036a.fdfb7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "temp",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 220,
        "wires": [
            [
                "5e57ad2.2743054"
            ]
        ]
    },
    {
        "id": "219c6a49.0e74b6",
        "type": "mysql",
        "z": "4fd2e6c4.650f68",
        "mydb": "c65fcf3a.e457e",
        "name": "INSERT",
        "x": 920,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "dc6f6af4.a034f8",
        "type": "function",
        "z": "4fd2e6c4.650f68",
        "name": "Prepare SQL",
        "func": "const query = \n`\nINSERT INTO client_data\n(\nclient_id,\ntemperature,\nhumidity,\npressure,\nresistance\n)\nVALUES\n(\n1,\n${msg.payload.temperature_exterior},\n${msg.payload.humidity_exterior},\n${msg.payload.pressure_exterior},\n${msg.payload.resistance_exterior}\n);\n`\nmsg.topic = query;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 730,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "12e32165.61d6ef",
        "type": "change",
        "z": "8bc3036a.fdfb7",
        "name": " ",
        "rules": [
            {
                "t": "delete",
                "p": "uibuilderCtrl",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "_auth.userValidated",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 320,
        "wires": [
            [
                "1123ce96.d734d1"
            ]
        ]
    },
    {
        "id": "6669e59b.98054c",
        "type": "mysql",
        "z": "558e4608.692488",
        "mydb": "b405b45b.879578",
        "name": "SELECT",
        "x": 560,
        "y": 340,
        "wires": [
            [
                "ae530c1d.2336c"
            ]
        ]
    },
    {
        "id": "280036e1.69ce0a",
        "type": "mysql",
        "z": "558e4608.692488",
        "mydb": "b405b45b.879578",
        "name": "SELECT",
        "x": 560,
        "y": 240,
        "wires": [
            [
                "b68255ed.a8b7b8"
            ]
        ]
    },
    {
        "id": "b68255ed.a8b7b8",
        "type": "change",
        "z": "558e4608.692488",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "user_client",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 240,
        "wires": [
            [
                "d932c2d6.a1e1"
            ]
        ]
    },
    {
        "id": "1e0c615d.154fef",
        "type": "change",
        "z": "558e4608.692488",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "bounds",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 340,
        "wires": [
            [
                "e6787d49.ad67c"
            ]
        ]
    },
    {
        "id": "674c3625.7955c8",
        "type": "change",
        "z": "558e4608.692488",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT client_id, max_temp, min_temp, max_hum, min_hum, max_pres, min_pres, max_qua FROM visualisation_p.client_info;",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 340,
        "wires": [
            [
                "6669e59b.98054c"
            ]
        ]
    },
    {
        "id": "a4f88d99.b8c1f",
        "type": "change",
        "z": "558e4608.692488",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "select user_id,client_id from user as u join selected_clients as sc on u.id = sc.user_id;",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 240,
        "wires": [
            [
                "280036e1.69ce0a"
            ]
        ]
    },
    {
        "id": "2463c415.e485bc",
        "type": "function",
        "z": "558e4608.692488",
        "name": "Generate notifications",
        "func": "// newest data from sensors by client\nconst client_data = msg.payload.data\nconst bounds = msg.payload.bounds\n\nnew_notifications = []\nlet max\nlet min\n\nclient_data.forEach(client => {\n    \n    // TEMP\n    if(bounds[client.client_id].min_temp) {\n        min = bounds[client.client_id].min_temp \n    }\n    else {\n        min = 15\n    }                \n    if (client.temperature < min) {\n        if (client.temperature < min - 5) {\n            addNotification(client.client_id, \"TEMP\", client.temperature, \"Teplota u \"+client.name+\" je nebezpečne nízka!\", 1)\n        }\n        else {\n            addNotification(client.client_id, \"TEMP\", client.temperature, \"Teplota u \"+client.name+\" je nezvyčajne nízka!\", 2)\n        }\n    }  \n    if(bounds[client.client_id].max_temp) {\n        max = bounds[client.client_id].max_temp \n    }\n    else {\n        max = 40\n    }   \n    if (client.temperature > max) {\n        if (client.temperature > max + 5) {\n            addNotification(client.client_id, \"TEMP\", client.temperature, \"Teplota u \"+client.name+\" je nebezpečne vysoká!\", 1)\n        }\n        else {\n            addNotification(client.client_id, \"TEMP\", client.temperature, \"Teplota u \"+client.name+\" je nezvyčajne vysoká!\", 2)\n        }\n    }\n\n    // HUM\n    if(bounds[client.client_id].min_hum) {\n        min = bounds[client.client_id].min_hum \n    }\n    else {\n        min = 30\n    } \n    if (client.humidity < min) {\n        if (client.humidity < min - 10) {\n            addNotification(client.client_id, \"HUM\", client.humidity, \"Vlkhosť vzduchu u \"+client.name+\" je nebezpečne nízka!\", 1)\n        }\n        else {\n            addNotification(client.client_id, \"HUM\", client.humidity, \"Vlkhosť vzduchu u \"+client.name+\" je nezvyčajne nízka!\", 2)\n        }\n    }  \n    if(bounds[client.client_id].max_hum) {\n        max = bounds[client.client_id].max_hum \n    }\n    else {\n        max = 50\n    }  \n    if (client.humidity > max) {\n        if (client.humidity > max + 10) {\n            addNotification(client.client_id, \"HUM\", client.humidity, \"Vlkhosť vzduchu u \"+client.name+\" je nebezpečne vysoká!\", 1)\n        }\n        else {\n            addNotification(client.client_id, \"HUM\", client.humidity, \"Vlkhosť vzduchu u \"+client.name+\" je nezvyčajne vysoká!\", 2)\n        }\n    }\n    \n    // PRES\n    if(bounds[client.client_id].min_pres) {\n        min = bounds[client.client_id].min_pres \n    }\n    else {\n        min = 950\n    } \n    if (client.pressure < min) {\n        if (client.pressure < min - 5) {\n            addNotification(client.client_id, \"PRES\", client.pressure, \"Tlak u \"+client.name+\" je nebezpečne nízky!\", 1)\n        }\n        else {\n            addNotification(client.client_id, \"PRES\", client.pressure, \"Tlak u \"+client.name+\" je nezvyčajne nízky!\", 2)\n        }\n    }  \n    if(bounds[client.client_id].max_pres) {\n        max = bounds[client.client_id].max_pres \n    }\n    else {\n        max = 1050\n    }  \n    if (client.pressure > max) {\n        if (client.pressure > max + 5) {\n            addNotification(client.client_id, \"PRES\", client.pressure, \"Tlak u \"+client.name+\" je nebezpečne vysoký!\", 1)\n        }\n        else {\n            addNotification(client.client_id, \"PRES\", client.pressure, \"Tlak u \"+client.name+\" je nezvyčajne vysoký!\", 2)\n        }\n    }\n    \n    // QUA/RES\n    if(bounds[client.client_id].max_qua) {\n        max = bounds[client.client_id].max_qua \n    }\n    else {\n        max = 250\n    }  \n    if (client.resistance > max) {\n        if (client.resistance > max + 20) {\n            addNotification(client.client_id, \"RES\", client.resistance, \"Kvalita vzduchu u \"+client.name+\" je nebezpečne nízka!\", 1)\n        }\n        else {\n            addNotification(client.client_id, \"RES\", client.resistance, \"Kvalita vzduchu u \"+client.name+\" je nezvyčajne nízka!\", 2)\n        }\n    }      \n});\nmsg.payload = new_notifications\nreturn msg;\n\nfunction addNotification(client_id, type, value, message, importance) {\n    let notification = {\n        client_id: client_id,\n        type: type,\n        value: value,\n        message: message + \" (\" + value + \")\",\n        importance: importance,\n    }\n    new_notifications.push(notification)\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1040,
        "y": 380,
        "wires": [
            [
                "2f95bb0.31c8546"
            ]
        ]
    },
    {
        "id": "214bbf62.4c6dc",
        "type": "mysql",
        "z": "558e4608.692488",
        "mydb": "b405b45b.879578",
        "name": "SELECT",
        "x": 560,
        "y": 160,
        "wires": [
            [
                "f2dfc9af.a890b8"
            ]
        ]
    },
    {
        "id": "f2dfc9af.a890b8",
        "type": "change",
        "z": "558e4608.692488",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "notifications",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 160,
        "wires": [
            [
                "d932c2d6.a1e1"
            ]
        ]
    },
    {
        "id": "8d7e3ef8.6322",
        "type": "change",
        "z": "558e4608.692488",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "select * from notification",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 160,
        "wires": [
            [
                "214bbf62.4c6dc"
            ]
        ]
    },
    {
        "id": "a522c57a.a0b428",
        "type": "comment",
        "z": "558e4608.692488",
        "name": "client bounds",
        "info": "",
        "x": 410,
        "y": 300,
        "wires": []
    },
    {
        "id": "84801364.fc66d",
        "type": "comment",
        "z": "558e4608.692488",
        "name": "user_client",
        "info": "",
        "x": 400,
        "y": 200,
        "wires": []
    },
    {
        "id": "7a1b8528.12f66c",
        "type": "comment",
        "z": "558e4608.692488",
        "name": "notifications",
        "info": "",
        "x": 410,
        "y": 120,
        "wires": []
    },
    {
        "id": "d932c2d6.a1e1",
        "type": "join",
        "z": "558e4608.692488",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 870,
        "y": 160,
        "wires": [
            [
                "3c0d52aa.a13c7e"
            ]
        ]
    },
    {
        "id": "3c0d52aa.a13c7e",
        "type": "function",
        "z": "558e4608.692488",
        "name": "User objects",
        "func": "// user client pairs\nconst user_client = msg.payload.user_client\n// all notifications from db\nconst all_notifications = msg.payload.notifications\n// all users\nlet users = msg.payload.users\n\nusers.forEach(user => {    \n    let selected_clients = []\n    user_client.forEach(uc_pair => {\n        if(user.id == uc_pair.user_id) {\n            selected_clients.push(uc_pair.client_id)\n        }\n    });\n    user.selected_clients = selected_clients\n    let notifications = []\n    all_notifications.forEach(notification => {\n        if(user.id == notification.user_id) {\n            notifications.push(notification)\n        }\n    });\n    user.notifications = notifications\n});\n\nmsg.payload = users\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1010,
        "y": 160,
        "wires": [
            [
                "a2ced278.34ee1"
            ]
        ]
    },
    {
        "id": "fae5e2ba.f9e32",
        "type": "mysql",
        "z": "558e4608.692488",
        "mydb": "b405b45b.879578",
        "name": "SELECT",
        "x": 560,
        "y": 80,
        "wires": [
            [
                "833c2731.9449c8"
            ]
        ]
    },
    {
        "id": "833c2731.9449c8",
        "type": "change",
        "z": "558e4608.692488",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "users",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 80,
        "wires": [
            [
                "d932c2d6.a1e1"
            ]
        ]
    },
    {
        "id": "52eaa261.b692fc",
        "type": "change",
        "z": "558e4608.692488",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "select id from user;",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 80,
        "wires": [
            [
                "fae5e2ba.f9e32"
            ]
        ]
    },
    {
        "id": "cdb2ae38.fad47",
        "type": "comment",
        "z": "558e4608.692488",
        "name": "users",
        "info": "",
        "x": 390,
        "y": 40,
        "wires": []
    },
    {
        "id": "21228483.b51c6c",
        "type": "join",
        "z": "558e4608.692488",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1190,
        "y": 260,
        "wires": [
            [
                "917e9988.8212e8"
            ]
        ]
    },
    {
        "id": "917e9988.8212e8",
        "type": "link out",
        "z": "558e4608.692488",
        "name": "",
        "links": [
            "639581a8.2ff3c"
        ],
        "x": 1295,
        "y": 260,
        "wires": []
    },
    {
        "id": "639581a8.2ff3c",
        "type": "link in",
        "z": "558e4608.692488",
        "name": "",
        "links": [
            "917e9988.8212e8"
        ],
        "x": 195,
        "y": 560,
        "wires": [
            [
                "22739a5c.761b36"
            ]
        ]
    },
    {
        "id": "d327b400.6a0848",
        "type": "debug",
        "z": "558e4608.692488",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 370,
        "y": 520,
        "wires": []
    },
    {
        "id": "22739a5c.761b36",
        "type": "function",
        "z": "558e4608.692488",
        "name": "Notification filter",
        "func": "const notifications = msg.payload.notifications\nconst users = msg.payload.users\n\nfinal_notifications = []\n\n// notification must have selected client's id to be assigned to user\n// do not insert if notification has equal type & client_id & importance with some other\nnotifications.forEach(notification => {\n    \n    users.forEach(user => {\n        \n        if(user.selected_clients.includes(notification.client_id)){\n            if(user.notifications.length == 0){                \n                new_notif = newNotification(notification)\n                new_notif.user_id = user.id\n                final_notifications.push(new_notif)\n            }\n            else {\n                let exists = false\n                user.notifications.forEach(usr_notif => {\n                    new_notif = newNotification(notification)\n                    if(usr_notif.type == new_notif.type && usr_notif.client_id == new_notif.client_id && usr_notif.importance == new_notif.importance) {\n                        exists = true\n                    }\n                });\n                if(!exists) {\n                        new_notif.user_id = user.id\n                        final_notifications.push(new_notif)\n                    }\n            }            \n        }            \n    });\n});\n\nmsg.payload = final_notifications\n\nreturn msg\n\n\nfunction newNotification(notification) {\n    let new_notif = {}    \n    new_notif.client_id = notification.client_id\n    new_notif.type = notification.type\n    new_notif.value = notification.value\n    new_notif.message = notification.message\n    new_notif.importance = notification.importance\n    new_notif.user_id = notification.user_id\n    return new_notif\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 560,
        "wires": [
            [
                "d327b400.6a0848",
                "c2de64a2.0a4928"
            ]
        ]
    },
    {
        "id": "a2ced278.34ee1",
        "type": "change",
        "z": "558e4608.692488",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "users",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1230,
        "y": 160,
        "wires": [
            [
                "21228483.b51c6c"
            ]
        ]
    },
    {
        "id": "2f95bb0.31c8546",
        "type": "change",
        "z": "558e4608.692488",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "notifications",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1230,
        "y": 380,
        "wires": [
            [
                "21228483.b51c6c"
            ]
        ]
    },
    {
        "id": "c2de64a2.0a4928",
        "type": "split",
        "z": "558e4608.692488",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 570,
        "y": 560,
        "wires": [
            [
                "6f6495ac.83804c",
                "e179c806.9293f8"
            ]
        ]
    },
    {
        "id": "26336277.ecf05e",
        "type": "mysql",
        "z": "558e4608.692488",
        "mydb": "b405b45b.879578",
        "name": "INSERT",
        "x": 980,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "6f6495ac.83804c",
        "type": "function",
        "z": "558e4608.692488",
        "name": "SQL query",
        "func": "const notif = msg.payload\n\nconst SQL = `INSERT INTO notification (time, user_id, client_id, type, value, message, importance) VALUES (time(now()), '${notif.user_id}', '${notif.client_id}', '${notif.type}', '${notif.value}', '${notif.message}', '${notif.importance}');`\n\nmsg.topic = SQL\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 790,
        "y": 520,
        "wires": [
            [
                "26336277.ecf05e"
            ]
        ]
    },
    {
        "id": "8df7ae21.ff86a",
        "type": "comment",
        "z": "558e4608.692488",
        "name": "database",
        "info": "",
        "x": 780,
        "y": 480,
        "wires": []
    },
    {
        "id": "57577abd.cf2314",
        "type": "comment",
        "z": "558e4608.692488",
        "name": "telegram & mail",
        "info": "",
        "x": 800,
        "y": 640,
        "wires": []
    },
    {
        "id": "d801863f.0e8a48",
        "type": "comment",
        "z": "558e4608.692488",
        "name": "users with their notifications",
        "info": "",
        "x": 1040,
        "y": 120,
        "wires": []
    },
    {
        "id": "be197283.5d755",
        "type": "comment",
        "z": "617b446b.a0195c",
        "name": "email",
        "info": "",
        "x": 730,
        "y": 360,
        "wires": []
    },
    {
        "id": "8a88dc50.081df",
        "type": "e-mail",
        "z": "617b446b.a0195c",
        "server": "smtp.gmail.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "",
        "x": 950,
        "y": 320,
        "wires": []
    },
    {
        "id": "e179c806.9293f8",
        "type": "link out",
        "z": "558e4608.692488",
        "name": "",
        "links": [
            "a59169e2.594158",
            "93252fb0.0832f"
        ],
        "x": 735,
        "y": 600,
        "wires": []
    },
    {
        "id": "93252fb0.0832f",
        "type": "link in",
        "z": "617b446b.a0195c",
        "name": "",
        "links": [
            "e179c806.9293f8"
        ],
        "x": 355,
        "y": 140,
        "wires": [
            [
                "884101d6.c9afb"
            ]
        ]
    },
    {
        "id": "d12d7ec0.7853a",
        "type": "mysql",
        "z": "617b446b.a0195c",
        "mydb": "b405b45b.879578",
        "name": "SELECT notification_settings",
        "x": 420,
        "y": 180,
        "wires": [
            [
                "a864a3f6.c8dff"
            ]
        ]
    },
    {
        "id": "884101d6.c9afb",
        "type": "change",
        "z": "617b446b.a0195c",
        "name": "Set query",
        "rules": [
            {
                "t": "set",
                "p": "notification",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "select * from notification_settings where user_id= :user_id;",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 140,
        "wires": [
            [
                "d12d7ec0.7853a"
            ]
        ]
    },
    {
        "id": "a864a3f6.c8dff",
        "type": "change",
        "z": "617b446b.a0195c",
        "name": "Set credentials",
        "rules": [
            {
                "t": "set",
                "p": "credentials",
                "pt": "msg",
                "to": "payload[0]",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 220,
        "wires": [
            [
                "26bd8974.4a4756",
                "e19956cc.9472e8",
                "385dafed.002c7"
            ]
        ]
    },
    {
        "id": "b0fe339.5f1d2d",
        "type": "comment",
        "z": "617b446b.a0195c",
        "name": "telegram",
        "info": "",
        "x": 740,
        "y": 80,
        "wires": []
    },
    {
        "id": "1467d1e9.6e52ee",
        "type": "comment",
        "z": "617b446b.a0195c",
        "name": "ulozit chatId do databazy",
        "info": "",
        "x": 130,
        "y": 520,
        "wires": []
    },
    {
        "id": "f2b94834.768038",
        "type": "telegram receiver",
        "z": "617b446b.a0195c",
        "name": "",
        "bot": "fbc38b7a.95acf8",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 130,
        "y": 560,
        "wires": [
            [
                "f1faa94a.08da38",
                "82a4a3ad.5891c"
            ],
            []
        ]
    },
    {
        "id": "4c83b28f.ffba1c",
        "type": "telegram sender",
        "z": "617b446b.a0195c",
        "name": "",
        "bot": "fbc38b7a.95acf8",
        "haserroroutput": false,
        "outputs": 1,
        "x": 990,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "26bd8974.4a4756",
        "type": "function",
        "z": "617b446b.a0195c",
        "name": "Prepare Telegram",
        "func": "const credentials = msg.credentials\nconst notification = msg.notification\n\nif(!credentials.telegram_id) {\n    return null\n}\n\nlet telegramObject = {}\n\ntelegramObject.chatId = credentials.telegram_id\ntelegramObject.type = \"message\"\ntelegramObject.content = notification.message\n\nmsg.payload = telegramObject\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 770,
        "y": 120,
        "wires": [
            [
                "4c83b28f.ffba1c"
            ]
        ]
    },
    {
        "id": "e19956cc.9472e8",
        "type": "function",
        "z": "617b446b.a0195c",
        "name": "Prepare email",
        "func": "const credentials = msg.credentials\nconst notification = msg.notification\n\nif(!credentials.email) {\n    return null\n}\n\nmsg.to = credentials.email\nmsg.topic = \"Upozornenie Smartcare.sk\"\nmsg.payload = notification.message\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 760,
        "y": 320,
        "wires": [
            [
                "8a88dc50.081df"
            ]
        ]
    },
    {
        "id": "1e786cce.838aa3",
        "type": "trigger",
        "z": "558e4608.692488",
        "name": "Notification check",
        "op1": "notification check",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-3",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 190,
        "y": 220,
        "wires": [
            [
                "52eaa261.b692fc",
                "8d7e3ef8.6322",
                "a4f88d99.b8c1f",
                "674c3625.7955c8",
                "984048d9.5e71a8"
            ]
        ]
    },
    {
        "id": "dfc257ee.8f82e8",
        "type": "inject",
        "z": "558e4608.692488",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 180,
        "wires": [
            [
                "1e786cce.838aa3"
            ]
        ]
    },
    {
        "id": "6a2a4a62.60df64",
        "type": "comment",
        "z": "558e4608.692488",
        "name": "Every 3 minutes",
        "info": "",
        "x": 200,
        "y": 260,
        "wires": []
    },
    {
        "id": "6ae60beb.81c024",
        "type": "mysql",
        "z": "617b446b.a0195c",
        "mydb": "b405b45b.879578",
        "name": "GET Telegram",
        "x": 360,
        "y": 620,
        "wires": [
            [
                "708f85e8.fb31fc"
            ]
        ]
    },
    {
        "id": "f1faa94a.08da38",
        "type": "function",
        "z": "617b446b.a0195c",
        "name": "Prepare Query",
        "func": "msg.topic = `SELECT * FROM notification_settings WHERE telegram_key = ${msg.payload.content}`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 580,
        "wires": [
            [
                "6ae60beb.81c024"
            ]
        ]
    },
    {
        "id": "d7428e4f.7f4ce",
        "type": "comment",
        "z": "617b446b.a0195c",
        "name": "dashboard",
        "info": "",
        "x": 740,
        "y": 200,
        "wires": []
    },
    {
        "id": "f83eebc1.4b8ef8",
        "type": "link out",
        "z": "617b446b.a0195c",
        "name": "",
        "links": [
            "6e15859f.0113cc",
            "958aa8b8.ca5928",
            "13e1073d.4a3289"
        ],
        "x": 915,
        "y": 240,
        "wires": []
    },
    {
        "id": "6b5573dd.4ba39c",
        "type": "comment",
        "z": "8bc3036a.fdfb7",
        "name": "Frontend messages",
        "info": "",
        "x": 270,
        "y": 100,
        "wires": []
    },
    {
        "id": "385dafed.002c7",
        "type": "change",
        "z": "617b446b.a0195c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "new notifications",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 240,
        "wires": [
            [
                "f83eebc1.4b8ef8"
            ]
        ]
    },
    {
        "id": "13e1073d.4a3289",
        "type": "link in",
        "z": "8bc3036a.fdfb7",
        "name": "",
        "links": [
            "f83eebc1.4b8ef8"
        ],
        "x": 855,
        "y": 360,
        "wires": [
            [
                "5e57ad2.2743054"
            ]
        ]
    },
    {
        "id": "1c3d127.97b24ee",
        "type": "comment",
        "z": "8bc3036a.fdfb7",
        "name": "New notification",
        "info": "",
        "x": 740,
        "y": 360,
        "wires": []
    },
    {
        "id": "dab7128f.eb5c6",
        "type": "mysql",
        "z": "558e4608.692488",
        "mydb": "b405b45b.879578",
        "name": "SELECT",
        "x": 560,
        "y": 420,
        "wires": [
            [
                "2e8c78c0.b0a338"
            ]
        ]
    },
    {
        "id": "2e8c78c0.b0a338",
        "type": "change",
        "z": "558e4608.692488",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "data",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 420,
        "wires": [
            [
                "e6787d49.ad67c"
            ]
        ]
    },
    {
        "id": "984048d9.5e71a8",
        "type": "change",
        "z": "558e4608.692488",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT t1.time, t1.client_id, t2.name, t1.temperature, t1.humidity, t1.pressure, t1.resistance FROM client_data t1 INNER JOIN (SELECT Max(time) time, client_id, name FROM  client_data join (select id,name from all_clients) as ac on client_id = ac.id GROUP BY client_id ) AS t2 ON t1.client_id = t2.client_id AND t1.time = t2.time ORDER BY time DESC;",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 420,
        "wires": [
            [
                "dab7128f.eb5c6"
            ]
        ]
    },
    {
        "id": "daf1e4d8.a02e08",
        "type": "comment",
        "z": "558e4608.692488",
        "name": "client data",
        "info": "",
        "x": 400,
        "y": 380,
        "wires": []
    },
    {
        "id": "e6787d49.ad67c",
        "type": "join",
        "z": "558e4608.692488",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 870,
        "y": 380,
        "wires": [
            [
                "2463c415.e485bc"
            ]
        ]
    },
    {
        "id": "ae530c1d.2336c",
        "type": "function",
        "z": "558e4608.692488",
        "name": "",
        "func": "let arr = msg.payload\nlet newBounds = {}\narr.forEach(el => {\n    bounds = {}\n    bounds.max_temp = el.max_temp\n    bounds.min_temp = el.min_temp\n    bounds.max_hum = el.max_hum\n    bounds.min_hum = el.min_hum\n    bounds.max_pres = el.max_pres\n    bounds.min_pres = el.min_pres\n    bounds.max_qua = el.max_qua\n    bounds.min_qua = el.min_qua\n    newBounds[el.client_id] = bounds\n});\n\nmsg.payload = newBounds\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 560,
        "y": 300,
        "wires": [
            [
                "1e0c615d.154fef"
            ]
        ]
    },
    {
        "id": "470448a9.a57d58",
        "type": "function",
        "z": "617b446b.a0195c",
        "name": "Prepare Query",
        "func": "const telegram = msg.payload.telegram\nconst user_id = msg.payload.notifSettings.user_id\n\nmsg.topic = `UPDATE notification_settings SET telegram_id = ${telegram.chatId} WHERE user_id = ${user_id}`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1060,
        "y": 520,
        "wires": [
            [
                "fbb9019d.ddc43"
            ]
        ]
    },
    {
        "id": "fbb9019d.ddc43",
        "type": "mysql",
        "z": "617b446b.a0195c",
        "mydb": "b405b45b.879578",
        "name": "UPDATE Telegram",
        "x": 1290,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "fe87482.b7aa9b8",
        "type": "join",
        "z": "617b446b.a0195c",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 570,
        "y": 580,
        "wires": [
            [
                "b378643c.ab3468"
            ]
        ]
    },
    {
        "id": "708f85e8.fb31fc",
        "type": "change",
        "z": "617b446b.a0195c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "notifSettings",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 660,
        "wires": [
            [
                "fe87482.b7aa9b8"
            ]
        ]
    },
    {
        "id": "82a4a3ad.5891c",
        "type": "change",
        "z": "617b446b.a0195c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "telegram",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 520,
        "wires": [
            [
                "fe87482.b7aa9b8"
            ]
        ]
    },
    {
        "id": "8f120e62.d5c0b",
        "type": "function",
        "z": "617b446b.a0195c",
        "name": "Prepare Telegram",
        "func": "const telegram = msg.payload.telegram\n\nlet telegramObject = {}\n\ntelegramObject.chatId = telegram.chatId\ntelegramObject.type = \"message\"\ntelegramObject.content = \"Telegram úspešne aktivovaný!\"\n\nmsg.payload = telegramObject\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1070,
        "y": 560,
        "wires": [
            [
                "b8431fe4.656ec"
            ]
        ]
    },
    {
        "id": "b8431fe4.656ec",
        "type": "telegram sender",
        "z": "617b446b.a0195c",
        "name": "",
        "bot": "fbc38b7a.95acf8",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1290,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "cd6a99e0.6be4d8",
        "type": "catch",
        "z": "617b446b.a0195c",
        "name": "",
        "scope": [
            "b378643c.ab3468"
        ],
        "uncaught": false,
        "x": 1030,
        "y": 660,
        "wires": [
            [
                "bed9e448.552d78"
            ]
        ]
    },
    {
        "id": "b378643c.ab3468",
        "type": "function",
        "z": "617b446b.a0195c",
        "name": "Check message",
        "func": "const telegram = msg.payload.telegram\nconst notifSettings = msg.payload.notifSettings\n\nif(telegram.content == notifSettings.telegram_key) {\n    msg.topic = 1\n}\nelse {\n    msg. topic = 0\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 720,
        "y": 580,
        "wires": [
            [
                "be9b005a.fba0b"
            ]
        ]
    },
    {
        "id": "29abcea3.9e7ac2",
        "type": "telegram sender",
        "z": "617b446b.a0195c",
        "name": "",
        "bot": "fbc38b7a.95acf8",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1290,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "bed9e448.552d78",
        "type": "function",
        "z": "617b446b.a0195c",
        "name": "Prepare Telegram",
        "func": "const telegram = msg.payload.telegram\n\nlet telegramObject = {}\n\ntelegramObject.chatId = telegram.chatId\ntelegramObject.type = \"message\"\ntelegramObject.content = \"Zadali ste nesprávny telegram kód!\"\n\nmsg.payload = telegramObject\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1070,
        "y": 620,
        "wires": [
            [
                "29abcea3.9e7ac2"
            ]
        ]
    },
    {
        "id": "be9b005a.fba0b",
        "type": "switch",
        "z": "617b446b.a0195c",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 870,
        "y": 580,
        "wires": [
            [
                "470448a9.a57d58",
                "8f120e62.d5c0b"
            ],
            [
                "bed9e448.552d78"
            ]
        ]
    },
    {
        "id": "86dc742d.528fd8",
        "type": "catch",
        "z": "617b446b.a0195c",
        "name": "",
        "scope": [
            "6ae60beb.81c024"
        ],
        "uncaught": false,
        "x": 330,
        "y": 700,
        "wires": [
            [
                "708f85e8.fb31fc"
            ]
        ]
    },
    {
        "id": "9a37cc71.abb2e",
        "type": "function",
        "z": "4fd2e6c4.650f68",
        "name": "Generate data",
        "func": "const query = \n`\nINSERT INTO client_data\n(\nclient_id,\ntemperature,\nhumidity,\npressure,\nresistance,\nbed\n)\nVALUES\n(\n${msg.payload},\n${Math.round(Math.random() * 10 + 15).toFixed(2)},\n${Math.round(Math.random() * 20 + 30).toFixed(2)},\n${Math.floor(Math.random() * 100 + 950)},\n${Math.floor(Math.random() * 100 + 100)},\n0\n);\n`\nmsg.topic = query;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 780,
        "y": 660,
        "wires": [
            [
                "5bec0466.59b74c"
            ]
        ]
    },
    {
        "id": "9c999518.b7a198",
        "type": "inject",
        "z": "4fd2e6c4.650f68",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "120",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 310,
        "y": 660,
        "wires": [
            [
                "3963dd80.2c4372",
                "a419eca1.06723",
                "1a48d8a3.667747"
            ]
        ]
    },
    {
        "id": "1a48d8a3.667747",
        "type": "change",
        "z": "4fd2e6c4.650f68",
        "name": "Set client id = 1",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 600,
        "wires": [
            [
                "9a37cc71.abb2e"
            ]
        ]
    },
    {
        "id": "3963dd80.2c4372",
        "type": "change",
        "z": "4fd2e6c4.650f68",
        "name": "Set client id = 2",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "2",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 640,
        "wires": [
            [
                "9a37cc71.abb2e"
            ]
        ]
    },
    {
        "id": "cd2f0ddc.3b042",
        "type": "change",
        "z": "4fd2e6c4.650f68",
        "name": "Set client id = 3",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "3",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 680,
        "wires": [
            [
                "9a37cc71.abb2e"
            ]
        ]
    },
    {
        "id": "a419eca1.06723",
        "type": "change",
        "z": "4fd2e6c4.650f68",
        "name": "Set client id = 4",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "4",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 720,
        "wires": [
            [
                "9a37cc71.abb2e"
            ]
        ]
    },
    {
        "id": "5bec0466.59b74c",
        "type": "mysql",
        "z": "4fd2e6c4.650f68",
        "mydb": "c65fcf3a.e457e",
        "name": "INSERT",
        "x": 960,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "92057aa5.e48528",
        "type": "comment",
        "z": "4fd2e6c4.650f68",
        "name": "GaSens3",
        "info": "",
        "x": 540,
        "y": 320,
        "wires": []
    },
    {
        "id": "6669185e.2b8cb8",
        "type": "comment",
        "z": "4fd2e6c4.650f68",
        "name": "Data generator",
        "info": "",
        "x": 320,
        "y": 600,
        "wires": []
    },
    {
        "id": "d8963e15.dadc8",
        "type": "comment",
        "z": "558e4608.692488",
        "name": "generate notifications from new data",
        "info": "",
        "x": 1040,
        "y": 340,
        "wires": []
    }
]